{
    "title": "DEEP Open Catalogue: Object Detection and Classification with Pytorch",
    "summary": "A trained Region Convolutional Neural Network (Faster RCNN) for object detection and classification.",
    "description": [
	"This is a plug-and-play tool for object detection and classification using deep neural networks (Faster R-CNN ",
	"ResNet-50 FPN Architecture) that were already pretrained on the [COCO Dataset](http://cocodataset.org/#home). ", 
	"The code uses the Pytorch Library, more information about it can be found at [Pytorch-Object-Detection](https://pytorch.org/docs/", 	
	"stabletorchvision/models.html#object-detection-instance-segmentation-and-person-keypoint-detection).\n",

	"The PREDICT method expects an image as input (or the url of an image) and will return a JSON with ",
	"the predictions that are greater than the probability threshold. Let's say you have an image of a cat ", 
	"and a dog together and the probability output was 50% a dog and 80% a cat,",
	"if you set the threshold to 70%, the only detected object will be the cat, because it's probability is grater than 70%.\n",

	"This module works on uploaded pictures and gives as output the rectangle coordinates x1,y1 and x2,y2 were the",
 	"classified object is located.", 
	"It also provides you the probability of the classified detected object.\n",

	"<img class='fit', src='https://pytorch.org/tutorials/_static/img/tv_tutorial/tv_image01.png'/>\n",

	"**References**\n",
        "[1]: Shaoqing Ren, Kaiming He, Ross Girshick, Jian Sun. [Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks]",
	"(https://arxiv.org/abs/1506.01497)",
	"arXiv preprint (2016): 1506-01497.\n"
	],
    "keywords": [
        "docker", "services", "library/pytorch", "rcnn"
    ],
    "license": "MIT",
    "date_creation": "2019-10-17",
    "sources": {
		"dockerfile_repo": "https://github.com/silkedh/DEEP-OC-obj_detect_pytorch",
		"docker_registry_repo": "https://hub.docker.com/u/silked/deep-oc-obj_detect_pytorch",
		"code": "https://github.com/silkedh/obj_detect_pytorch"
	},
    "continuous_integration": {
        "build_status_badge": "https://jenkins.indigo-datacloud.eu/buildStatus/icon?job=Pipeline-as-code/DEEP-OC-org/DEEP-OC-obj_detect_pytorch/master",
        "build_status_url": "https://jenkins.indigo-datacloud.eu/job/Pipeline-as-code/job/DEEP-OC-org/job/DEEP-OC-obj_detect_pytorch/job/master"
    },
    "tosca": [
        {
            "title": "Mesos (CPU)",
            "url": "https://raw.githubusercontent.com/indigo-dc/tosca-templates/master/deep-oc/deep-oc-mesos-webdav.yml",
            "inputs": [
                "rclone_conf",
                "rclone_url",
                "rclone_vendor",
                "rclone_user",
                "rclone_pass"
            ]
        }
    ]
}
